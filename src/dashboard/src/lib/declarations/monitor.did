type CanisterCycles = record {
  name : text;
  canister_id : principal;
  cycles : nat;
};
type CanisterMemorySize = record {
  name : text;
  size : nat;
  canister_id : principal;
};
type CycleBalances = record {
  timestamp : nat64;
  balances : vec record { text; float64 };
};
type Log = record { msg : text; timestamp : nat64 };
type Logger = record {
  "principal" : opt principal;
  source : opt text;
  data : opt text;
  description : text;
  created_on : nat64;
};
type RewardData = record {
  "principal" : principal;
  description : text;
  timestamp : nat64;
};
service : {
  get_latest_logs : (nat64) -> (vec Log) query;
  get_latest_with_timestamp : (nat64) -> (vec text) query;
  icp_balance : () -> (text) query;
  initiate_run : () -> ();
  latest_cycle_balances : (nat64) -> (vec CycleBalances) query;
  latest_icp_balances : (nat64) -> (vec record { nat64; float64 }) query;
  latest_proxy_logs : (nat64) -> (vec Logger);
  proxy_log_size : () -> (nat64);
  sorted_canister_cycles : () -> (vec CanisterCycles) query;
  sorted_memory_sizes : () -> (vec CanisterMemorySize) query;
  store_stats : () -> (vec text) query;
  timer_set : () -> (bool) query;
  token_latest_rewards : (nat64) -> (vec RewardData);
  token_log_size : () -> (nat64);
}