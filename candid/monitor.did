type CanisterStatusResultV2 = record {
  status : CanisterStatusType;
  memory_size : nat;
  cycles : nat;
  settings : DefiniteCanisterSettingsArgs;
  idle_cycles_burned_per_day : nat;
  module_hash : opt vec nat8;
};
type CanisterStatusType = variant { stopped; stopping; running };
type CanisterSummary = record {
  status : opt CanisterStatusResultV2;
  canister_id : opt principal;
};
type DefiniteCanisterSettingsArgs = record {
  freezing_threshold : nat;
  controllers : vec principal;
  memory_allocation : nat;
  compute_allocation : nat;
};
type GetSnsCanistersSummaryResponse = record {
  root : opt CanisterSummary;
  swap : opt CanisterSummary;
  ledger : opt CanisterSummary;
  index : opt CanisterSummary;
  governance : opt CanisterSummary;
  dapps : vec CanisterSummary;
  archives : vec CanisterSummary;
};
service : {
  get_sns_canisters_summary_test : () -> (GetSnsCanistersSummaryResponse);
}